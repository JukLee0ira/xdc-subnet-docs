"use strict";(self.webpackChunkxdc_subnet_docs=self.webpackChunkxdc_subnet_docs||[]).push([[586],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),s=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,h=c["".concat(u,".").concat(m)]||c[m]||d[m]||i;return n?o.createElement(h,a(a({ref:t},p),{},{components:n})):o.createElement(h,a({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1844:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"1. Launch a Subnet",sidebar_position:1},a="Launch a Subnet",l={unversionedId:"deployment/launch_subnet",id:"deployment/launch_subnet",title:"Launch a Subnet",description:"This is a guide for building your own XDC subnet with a bootnode, several master nodes, and customized genesis file.",source:"@site/docs/deployment/1_launch_subnet.md",sourceDirName:"deployment",slug:"/deployment/launch_subnet",permalink:"/xdc-subnet-docs/deployment/launch_subnet",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"1. Launch a Subnet",sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"0. Prerequisite",permalink:"/xdc-subnet-docs/deployment/prerequisite"},next:{title:"2. Deploy Parent Chain Smart Contract",permalink:"/xdc-subnet-docs/deployment/deploy_parent_chain_smart_contract"}},u={},s=[{value:"Build",id:"build",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Start the Subnet",id:"start-the-subnet",level:2},{value:"Local setup",id:"local-setup",level:3},{value:"Private network",id:"private-network",level:3}],p={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"launch-a-subnet"},"Launch a Subnet"),(0,r.kt)("p",null,"This is a guide for building your own XDC subnet with a bootnode, several master nodes, and customized genesis file."),(0,r.kt)("h2",{id:"build"},"Build"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Visit ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/XinFinOrg/XDC-Subnet/"},"https://github.com/XinFinOrg/XDC-Subnet/")," and clone the code, or use the following command")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git clone https://github.com/XinFinOrg/XDC-Subnet.git\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In the cloned directory, build three tools: ",(0,r.kt)("inlineCode",{parentName:"li"},"XDC"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"bootnode"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"puppeth")," by running ",(0,r.kt)("inlineCode",{parentName:"li"},"make XDC"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"make bootnode"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"make puppeth"),". The tools will be placed inside directory ",(0,r.kt)("inlineCode",{parentName:"li"},"./build/bin"),".")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"./build/bin/puppeth")," and follow its instructions, specifically",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},'when seeing "Please specify a network name to administer", enter the network name as you wish. e.g., network001.'),(0,r.kt)("li",{parentName:"ol"},'when seeing "What would you like to do?", choose "2. Configure new genesis".'),(0,r.kt)("li",{parentName:"ol"},'when seeing "Which consensus engine to use?", choose "3. XDPoS - delegated-proof-of-stake".'),(0,r.kt)("li",{parentName:"ol"},"as for other options, choose the options as you wish."),(0,r.kt)("li",{parentName:"ol"},'after the last step which is "Specify your chain/network ID if you want an explicit one", your genesis file is generated in your home directory and you can push "Ctrl-C" to exit ',(0,r.kt)("inlineCode",{parentName:"li"},"puppeth"),"."))),(0,r.kt)("li",{parentName:"ol"},"Copy the genesis file from your home directory to your working directory. The genesis file is located at ",(0,r.kt)("inlineCode",{parentName:"li"},"$HOME/.puppeth/network001")," where ",(0,r.kt)("inlineCode",{parentName:"li"},"$HOME")," is your home directory and ",(0,r.kt)("inlineCode",{parentName:"li"},"network001")," is your network name. This is a json file and you can rename it to ",(0,r.kt)("inlineCode",{parentName:"li"},"network001.json"),".")),(0,r.kt)("h2",{id:"start-the-subnet"},"Start the Subnet"),(0,r.kt)("p",null,"We provide you two options: "),(0,r.kt)("h3",{id:"local-setup"},"Local setup"),(0,r.kt)("p",null,"Follow the instruction in this repo ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/XinFinOrg/Local_DPoS_Setup"},"https://github.com/XinFinOrg/Local_DPoS_Setup")," to start the subnet in your local environment."),(0,r.kt)("h3",{id:"private-network"},"Private network"),(0,r.kt)("p",null,"Follow the instruction in  ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ethereum/go-ethereum#operating-a-private-network"},"the ethereum repo")," (section Operating a private network\n) to start your private subnet."))}d.isMDXComponent=!0}}]);