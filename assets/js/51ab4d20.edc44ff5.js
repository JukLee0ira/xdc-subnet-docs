"use strict";(self.webpackChunkxdc_subnet_docs=self.webpackChunkxdc_subnet_docs||[]).push([[989],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(k,i(i({ref:t},s),{},{components:n})):r.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3060:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"2. Debug Guide (How to know if my subnet is running?)",sidebar_position:2},i="Debug guide (how to know if my subnet is running?)",l={unversionedId:"deployment/debug_guide",id:"deployment/debug_guide",title:"Debug guide (how to know if my subnet is running?)",description:"## Subnet Nodes",source:"@site/docs/deployment/2_debug_guide.md",sourceDirName:"deployment",slug:"/deployment/debug_guide",permalink:"/xdc-subnet-docs/deployment/debug_guide",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"2. Debug Guide (How to know if my subnet is running?)",sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"1. Launch a Subnet",permalink:"/xdc-subnet-docs/deployment/launch_subnet"},next:{title:"3. Deployment and Configs Explanation",permalink:"/xdc-subnet-docs/deployment/configs_explanation"}},p={},c=[{value:"Subnet Nodes",id:"subnet-nodes",level:2},{value:"Subnet Services",id:"subnet-services",level:2}],s={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"debug-guide-how-to-know-if-my-subnet-is-running"},"Debug guide (how to know if my subnet is running?)"),(0,a.kt)("h2",{id:"subnet-nodes"},"Subnet Nodes"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Check chainstate with curl, you can change ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:8545")," to your subnet node's RPC PORT"),(0,a.kt)("p",{parentName:"li"},"Call current block api"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'curl --location \'http://localhost:8545\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{"jsonrpc":"2.0","method":"XDPoS_getV2BlockByNumber","params":["latest"],"id":1}\'\n')),(0,a.kt)("p",{parentName:"li"},"Check current peers"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'curl --location \'http://localhost:8545\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{"jsonrpc":"2.0","method":"admin_peers","params":[],"id":1}\'\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Check chainstate inside docker"),(0,a.kt)("p",{parentName:"li"},"Exec into the subnet container"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker exec -it <container_name> bash\n")),(0,a.kt)("p",{parentName:"li"},"Attach to the API process"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"XDC attach /work/xdcchain/XDC.ipc\n")),(0,a.kt)("p",{parentName:"li"},"Call current block api"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"XDPoS.getV2Block()\n")),(0,a.kt)("p",{parentName:"li"},"Check current peers"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"admin.peers\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Check logs, assuming log level 4 (default 2), you want to look for logs with blockNum, and blockNum should increase with time."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker logs -f <container_name> \n")))),(0,a.kt)("h2",{id:"subnet-services"},"Subnet Services"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Bootnode"),(0,a.kt)("p",{parentName:"li"},"Check logs, you should see messages from all subnet nodes"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker logs -f <container_name> \n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Relayer "),(0,a.kt)("p",{parentName:"li"},"Check logs, you should see blocks being periodically submitted"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker logs -f <container_name> \n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Stats-server"),(0,a.kt)("p",{parentName:"li"},"Check logs, in ",(0,a.kt)("inlineCode",{parentName:"p"},"<deployment folder>/stats-service/logs/debug"),", you should see block data and history data being received.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Frontend"),(0,a.kt)("p",{parentName:"li"},"Check logs or check errors through developer console in web browser."))))}d.isMDXComponent=!0}}]);